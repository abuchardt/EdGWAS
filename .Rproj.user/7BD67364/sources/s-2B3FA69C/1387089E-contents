rm(list=ls())
gc()

#library(xtable)
library(tidyverse)
library(magrittr)
library(MESS)
library(MASS)
library(glasso)
#library(car)
#library(fossil)
library(profvis)

library(RColorBrewer)
coul = brewer.pal(8, "Dark2") 
coul = colorRampPalette(coul)(15)[-c(2,4,7)]
palette(coul)

library(EdGwas)

randIndex <- function(clus1, clus2) {
  a <- sum(clus1[upper.tri(clus1)] == 0 & clus2[upper.tri(clus2)] == 0, na.rm = TRUE)
  b <- sum(clus1[upper.tri(clus1)] == 1 & clus2[upper.tri(clus2)] == 1, na.rm = TRUE)
  c <- sum(clus1[upper.tri(clus1)] == 0 & clus2[upper.tri(clus2)] == 1, na.rm = TRUE)
  d <- sum(clus1[upper.tri(clus1)] == 1 & clus2[upper.tri(clus2)] == 0, na.rm = TRUE)
  
  RI <- (a + b)/(a + b + c + d)
  
  list(RI = RI)
}

createB <- function(p, q, b1, b2, b3) {
  B <- list()
  #
  B[[1]] <- matrix(0, nrow = p, ncol = q)
  #
  B[[2]] <- matrix(1, nrow = p, ncol = q)
  #
  B[[3]] <- matrix(0, nrow = p, ncol = q)
  B[[3]][1, 1:2] <- b1 
  B[[4]] <- matrix(0, nrow = p, ncol = q)
  B[[4]][1, 1:2] <- b2 
  B[[5]] <- matrix(0, nrow = p, ncol = q)
  B[[5]][1, 1:2] <- b3
  #
  B[[6]] <- matrix(0, nrow = p, ncol = q)
  B[[6]][1, 1:5] <- b1 
  B[[7]] <- matrix(0, nrow = p, ncol = q)
  B[[7]][1, 1:5] <- b2
  B[[8]] <- matrix(0, nrow = p, ncol = q)
  B[[8]][1, 1:5] <- b3
  #
  B[[9]] <- matrix(0, nrow = p, ncol = q)
  B[[9]][1, 1:2] <- b1 
  B[[9]][2, 3:4] <- b1 
  B[[10]] <- matrix(0, nrow = p, ncol = q)
  B[[10]][1, 1:2] <- b2 
  B[[10]][2, 3:4] <- b2
  B[[11]] <- matrix(0, nrow = p, ncol = q)
  B[[11]][1, 1:2] <- b3
  B[[11]][2, 3:4] <- b3
  #
  B[[12]] <- matrix(0, nrow = p, ncol = q)
  B[[12]][1, 1:4] <- b1
  B[[12]][2, 5:8] <- b1
  B[[13]] <- matrix(0, nrow = p, ncol = q)
  B[[13]][1, 1:4] <- b2
  B[[13]][2, 5:8] <- b2
  B[[14]] <- matrix(0, nrow = p, ncol = q)
  B[[14]][1, 1:4] <- b3
  B[[14]][2, 5:8] <- b3
  #
  B[[15]] <- matrix(0, nrow = p, ncol = q)
  B[[15]][1, 1:2] <- b1 
  B[[15]][2, 1:2] <- b1 
  B[[16]] <- matrix(0, nrow = p, ncol = q)
  B[[16]][1, 1:2] <- b2 
  B[[16]][2, 1:2] <- b2
  B[[17]] <- matrix(0, nrow = p, ncol = q)
  B[[17]][1, 1:2] <- b3
  B[[17]][2, 1:2] <- b3
  #
  B[[18]] <- matrix(0, nrow = p, ncol = q)
  B[[18]][1, 1] <- b2 
  B[[18]][1, 2] <- b1 
  B[[18]][2, 1] <- b1
  B[[18]][2, 2] <- b2 
  B[[19]] <- matrix(0, nrow = p, ncol = q)
  B[[19]][1, 1] <- b3 
  B[[19]][1, 2] <- b1 
  B[[19]][2, 1] <- b1
  B[[19]][2, 2] <- b3 
  
  B
}

createClus <- function(p, q) {
  clus1 <- list()
  #
  clus1[[1]] <-  matrix(0, nrow = q, ncol = q) 
  #
  clus1[[2]] <-  matrix(1, nrow = q, ncol = q)
  diag(clus1[[1]]) <- 0
  #
  clus1[[3]] <- matrix(0, nrow = q, ncol = q)
  clus1[[3]][1:2, 1:2] <- 1
  diag(clus1[[3]]) <- 0
  clus1[[5]] <- clus1[[4]] <- clus1[[3]]
  #
  clus1[[6]] <- matrix(0, nrow = q, ncol = q)
  clus1[[6]][1:5, 1:5] <- 1
  diag(clus1[[6]]) <- 0
  clus1[[8]] <- clus1[[7]] <- clus1[[6]]
  #
  clus1[[9]] <- matrix(0, nrow = q, ncol = q)
  clus1[[9]][1:2, 1:2] <- 1
  clus1[[9]][3:4, 3:4] <- 1
  diag(clus1[[9]]) <- 0
  clus1[[11]] <- clus1[[10]] <- clus1[[9]]
  #
  clus1[[12]] <- matrix(0, nrow = q, ncol = q)
  clus1[[12]][1:4, 1:4] <- 1
  clus1[[12]][5:8, 5:8] <- 1
  diag(clus1[[12]]) <- 0
  clus1[[14]] <- clus1[[13]] <- clus1[[12]]
  clus1[[19]] <- clus1[[18]] <- clus1[[17]] <- clus1[[16]] <- clus1[[15]] <- clus1[[3]]  
  
  clus1
}



simFun <- function(X, SigmaE, B, rho = NULL, REPS = 100, K = length(B)) {
  
  N <- nrow(X)
  p <- ncol(X)
  q <- ncol(SigmaE)
  
  meanRI <- list(NULL)
  lRI <- list(NULL)
  uRI <- list(NULL)
  meanRhoSeq <- list(NULL)
  cvfit <- list(NULL)

  for (k in 1:K) {
    
    cat("k: ", k, "/", K)
    
    RI <- list(NULL)
    rhoSeq <- list(NULL)
    
    for (reps in 1:REPS) {
      
      cat(".")
      
      YY <- X %*% B[[k]] + mvrnorm(n = N, rep(0, q), SigmaE)
      Y <- scale(YY)
      
      RI[[reps]] <- vector(mode = "numeric", length= REPS)
      
      pc <- edgwas(x = X, y = Y, rho = rho)
      
      adjMat <- pc$A
      
      RI[[reps]] <- sapply(seq_along(adjMat), FUN = function(j) randIndex(clus1[[k]], adjMat[[j]])$RI)
      rhoSeq[[reps]] <- pc$rho
      
    }
    
    meanRI[[k]] <- colMeans(do.call(rbind, RI))
    lRI[[k]] <- apply(do.call(rbind, RI), 2, quantile, prob = .025)
    uRI[[k]] <- apply(do.call(rbind, RI), 2, quantile, prob = .975)
    meanRhoSeq[[k]] <- colMeans(do.call(rbind, rhoSeq))
    
    cat("\n")
  }
   list(meanRI = meanRI, lRI = lRI, uRI = uRI, meanRhoSeq = meanRhoSeq)
}


######################################
b1 <- 0.1
b2 <- 1
b3 <- 2

N <- 500
q <- 10
p <- 5000

set.seed(1)

X <- matrix(sample(0:2, N*p, replace=TRUE), nrow=N, ncol=p)
SigmaE <- diag(x = 1, nrow = q, ncol = q)

B <- createB(p, q, b1, b2, b3)
clus1 <- createClus(p, q)

sims <- simFun(X, SigmaE, B, rho = NULL, REPS = 100)
save(sims, file = "/home/ann-sophie/wip/noDisease/paper1/191111sims.RData")

######################################

#########
# LASSO #
#########
for (k in 1:length(B)) {
  cat("k: ", k, "/", length(B))
  YY <- X %*% B[[k]] + mvrnorm(n = N, rep(0, q), SigmaE)
  Y <- scale(YY)
  cvfit <- cv.edgwas(x = X, y = Y, rho = NULL, nfolds = 10) #, penalize.diagonal = TRUE)  
  save(cvfit, file = paste0("/home/ann-sophie/wip/noDisease/paper1/191007simsCVk",
                            k, ".RData"))
}


#########
# RIDGE #
#########
for (k in (9:length(B))) {
  cat("k: ", k, "/", length(B))
  YY <- X %*% B[[k]] + mvrnorm(n = N, rep(0, q), SigmaE)
  Y <- scale(YY)
  cvfit <- cv.edgwas(x = X, y = Y, rho = NULL, nfolds = 10) #, penalize.diagonal = TRUE) 
  save(cvfit, file = paste0("/home/ann-sophie/wip/noDisease/paper1/191007simsRidgeCVk",
                            k, ".RData"))
}


#########
# RIDGE (penalise diag = FALSE)#
#########
b1 <- 0.1
b2 <- 0.5
b3 <- 1

N <- 500
q <- 10
p <- 100

set.seed(1)

X <- matrix(sample(0:2, N*p, replace=TRUE), nrow=N, ncol=p)
SigmaE <- diag(x = 1, nrow = q, ncol = q)

B <- createB(p, q, b1, b2, b3)
clus1 <- createClus(p, q)

for (k in (3:length(B))) {
  cat("k: ", k, "/", length(B))
  YY <- X %*% B[[k]] + mvrnorm(n = N, rep(0, q), SigmaE)
  Y <- scale(YY)
  cvfit <- cv.edgwas(x = X, y = Y, rho = NULL, nfolds = 10, trace = 1, 
                     nrho = 40, logrho = TRUE)

  save(cvfit, file = paste0("/home/ann-sophie/wip/noDisease/paper1/191015simsRidgeCVdiagFk",
                            k, ".RData"))
}



#########
# RIDGE (penalise diag = FALSE)# NO log rho
######### 
b1 <- 0.1
b2 <- 0.5
b3 <- 1

N <- 500
q <- 10
p <- 100

set.seed(1)

X <- matrix(sample(0:2, N*p, replace=TRUE), nrow=N, ncol=p)
SigmaE <- diag(x = 1, nrow = q, ncol = q)

B <- createB(p, q, b1, b2, b3)
clus1 <- createClus(p, q)

for (k in c(1, (3:length(B)))) {
  cat("k: ", k, "/", length(B))
  YY <- X %*% B[[k]] + mvrnorm(n = N, rep(0, q), SigmaE)
  Y <- scale(YY)
  cvfit <- cv.edgwas(x = X, y = Y, rho = NULL, nfolds = 10, trace = 1, 
                     nrho = 40, logrho = FALSE)
  
  save(cvfit, file = paste0("/home/ann-sophie/wip/noDisease/paper1/191015simsRidgeCVdiagFkNolog",
                            k, ".RData"))
}

#########
# RIDGE (penalise diag = FALSE & LOW DIMENSIONAL)#
#########
b1 <- 0.1
b2 <- 0.5
b3 <- 1

N <- 500
q <- 10
p <- 50

set.seed(1)

X <- matrix(sample(0:2, N*p, replace=TRUE), nrow=N, ncol=p)
SigmaE <- diag(x = 1, nrow = q, ncol = q)

B <- createB(p, q, b1, b2, b3)
clus1 <- createClus(p, q)

for (k in (1:2)) {
  cat("k: ", k, "/", length(B))
  YY <- X %*% B[[k]] + mvrnorm(n = N, rep(0, q), SigmaE)
  Y <- scale(YY)
  cvfit <- cv.edgwas(x = X, y = Y, rho = NULL, nfolds = 10, trace = 1, 
                     nrho = 40, logrho = TRUE)
  
  save(cvfit, file = paste0("/home/ann-sophie/wip/noDisease/paper1/191016simsRidgeCVdiagFkLoDim",
                            k, ".RData"))
}


for (k in (3:length(B))) {
  cat("k: ", k, "/", length(B))
  YY <- X %*% B[[k]] + mvrnorm(n = N, rep(0, q), SigmaE)
  Y <- scale(YY)
  cvfit <- cv.edgwas(x = X, y = Y, rho = NULL, nfolds = 10, trace = 1, 
                     nrho = 40, logrho = FALSE)
  
  save(cvfit, file = paste0("/home/ann-sophie/wip/noDisease/paper1/191016simsRidgeCVdiagFkLoDimNolog",
                            k, ".RData"))
}







width <- 5.47 #11.69-1.4-1 #8.27-1-1.8
height <- (5.47+5.47/7)/2.5

par(mfrow = c(1,2))
for (k in 1:length(B)) {
  
  if(k %in% c(1,2, 3, 6, 9, 12, 15, 18)) {
    pdf(paste0("/home/ann-sophie/wip/noDisease/paper1/plotRIk", k, ".pdf"),
        width=width, height=height, pointsize = 12)
    par(mar = c(4,4,2,2), family = "serif", bg=NA)  
  }
  
  if (k %in% c(4,5,7,8,10,11,13,14,16,17,19)) {
    polygon(c(sims$meanRhoSeq[[k]], rev(sims$meanRhoSeq[[k]])),
            c(sims$uRI[[k]],rev(sims$lRI[[k]])),
            col= adjustcolor(k, alpha.f = 0.51), border=NA)  
    lines(sims$meanRhoSeq[[k]], sims$meanRI[[k]], col = k)
  } else {
    plot(sims$meanRhoSeq[[k]], sims$meanRI[[k]], type = "n", 
         xlab = bquote(rho), ylab = "RI", 
         main = bquote(k == .(k)),
         xaxt = "n", bty = "n", ylim = c(0,1))
    axis(side = 1, at = seq(sims$meanRhoSeq[[k]][1], 
                            sims$meanRhoSeq[[k]][length(sims$meanRhoSeq[[k]])], 
                            length.out = 5), 
         labels = round(seq(sims$meanRhoSeq[[k]][1], 
                            sims$meanRhoSeq[[k]][length(sims$meanRhoSeq[[k]])], 
                            length.out = 5), 2))
    polygon(c(sims$meanRhoSeq[[k]], rev(sims$meanRhoSeq[[k]])),
            c(sims$uRI[[k]],rev(sims$lRI[[k]])),
            col= adjustcolor(1, alpha.f = 0.51), border=NA)  
    lines(sims$meanRhoSeq[[k]], sims$meanRI[[k]], lty=1, col=1)  
  }
  if(k %in% c(5,8,11,14,17,19)) {
    legend("bottomright", legend = c(B[[k-2]][1,1],B[[k-1]][1,1],B[[k]][1,1]),
           lty = 1, col = c(k-2, k-1, k), bty = "n", title = "B")
  }
  if(k %in% c(1,2,5,8,11,14,17,19)) {
    plot(sims$cvfit[[k]], 1)
    dev.off()
  }
}







###############
# PROFILING
if(FALSE) {
  X <- matrix(sample(0:2, N*p, replace=TRUE), nrow=N, ncol=p)
  SigmaE <- diag(x = 1, nrow = q, ncol = q)
  B <- list()
  #
  B[[1]] <- matrix(0, nrow = p, ncol = q)
  B[[1]][1, 1:2] <- 2 
  
  tt <- simFun(N = 100, q = 10, p = 1000, rho = 0.1, REPS = 10)
  profvis(simFun(N = 100, q = 10, p = 1000, rho = 0.1, REPS = 10))
}



save(meanRI, lRI, uRI, file = "/home/ann-sophie/wip/noDisease/paper1/190922sims.RData")

load(file = "/home/ann-sophie/wip/noDisease/paper1/190922sims.RData")

width <- 5.47 #11.69-1.4-1 #8.27-1-1.8
height <- (5.47+5.47/7)/2.5

par(mfrow = c(1,1)) #2))
for (k in 1:length(B)) {
  
  if(k %in% c(1,2, 3, 6, 9, 12, 15, 18)) {
    pdf(paste0("/home/ann-sophie/wip/noDisease/paper1/plotRIk", k, ".pdf"),
        width=width, height=height, pointsize = 12)
    par(mar = c(4,4,2,2), family = "serif", bg=NA)  
  }
  
  if (k %in% c(4,5,7,8,10,11,13,14,16,17,19)) {
    polygon(c(log(meanRhoSeq[[k]]), rev(log(meanRhoSeq[[k]]))),
            c(uRI[[k]],rev(lRI[[k]])),
            col= adjustcolor(k, alpha.f = 0.51), border=NA)  
    lines(log(meanRhoSeq[[k]]), meanRI[[k]], col = k)
  } else {
    plot(log(meanRhoSeq[[k]]), meanRI[[k]], type = "n", 
         xaxt = "n", bty = "n", main = bquote(k == .(k)), ylim = c(0,1))
    axis(side = 1, at = seq(log(meanRhoSeq[[k]][1]), log(meanRhoSeq[[k]][length(meanRhoSeq[[k]])]), length.out = 5), labels = round(seq(meanRhoSeq[[k]][1], meanRhoSeq[[k]][length(meanRhoSeq[[k]])], length.out = 5), 2))
    polygon(c(log(meanRhoSeq[[k]]), rev(log(meanRhoSeq[[k]]))),
            c(uRI[[k]],rev(lRI[[k]])),
            col= adjustcolor(1, alpha.f = 0.51), border=NA)  
    lines(log(meanRhoSeq[[k]]), meanRI[[k]], lty=1, col=1)  
  }
  if(k %in% c(1,2,5,8,11,14,17,19)) {
    if(k %in% c(5,8,11,14,17,19)) {
      legend("bottomright", legend = c(B[[k-2]][1,1],B[[k-1]][1,1],B[[k]][1,1]),
           lty = 1, col = c(k-2, k-1, k), bty = "n", title = "B")
    }
    dev.off()
  }
}

par(mfrow = c(1,2))
for (k in 1:length(B)) {
  plot((rho), meanSS[[k]], xaxt = "n", bty = "n", main = bquote(k == .(k)), ylim = c(0,1))
  axis(side = 1, at = (rho), labels = rho)
  
  plot((rho), meanRI[[k]], type = "n", 
       xaxt = "n", bty = "n", main = bquote(k == .(k)), ylim = c(0,1))
  axis(side = 1, at = (rho), labels = rho)
  polygon(c((rho), rev((rho))),
          c(uRI[[k]],rev(lRI[[k]])),
          col= adjustcolor(1, alpha.f = 0.51), border=NA)  
  lines((rho), meanRI[[k]], lty=1, col=1)  
}
